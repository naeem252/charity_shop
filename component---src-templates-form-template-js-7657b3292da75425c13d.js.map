{"version":3,"sources":["webpack:///./src/templates/formTemplate.js"],"names":["FormpageTemplate","countyName","charityName","useState","readOnly","setReadOnly","window","path","location","href","split","useFormData","countyId","charityId","checkoutItems","delivery","subscription","firstname","lastname","postcode","address_1","address_2","town","county","is_used_same_address_for_billing","payment","phone","email","isEmailedMe","card_number","expiry_at","cvv","name","billing_firstname","billing_lastname","billing_postcode","billing_address_1","billing_address_2","billing_town","billing_county","formData","onChange","useEffect","count","change","value","includes","replace","toLowerCase","ch","charities","find","charity","locations","counties","id","i18n","enTranslations","isHide","className"],"mappings":"ymQAmBe,SAASA,IACtB,IAAIC,EACAC,EAFqC,EAKTC,oBAAS,GAAlCC,EALkC,KAKxBC,EALwB,KAOzC,GAAsB,oBAAXC,OAAwB,CACjC,IAAIC,EAAOD,OAAOE,SAASC,KAAKC,MAAM,KADL,GAG1BH,EAAQA,EAHkB,IAIlBG,MAAM,KACpBR,EALgC,KAKnBD,EALmB,KAPM,MAgBZU,YAAY,CACvCC,SAAU,KACVC,UAAW,KACXC,cAAe,GACfC,SAAU,CACRC,aAAc,OACdC,UAAW,GACXC,SAAU,GAEVC,SAAU,GACVC,UAAW,GACXC,UAAW,GACXC,KAAM,GACNC,OAAQ,GACRC,kCAAkC,GAMpCC,QAAS,CACPC,MAAO,GACPC,MAAO,GACPC,aAAa,EAEbC,YAAa,GACbC,UAAW,GACXC,IAAK,GACLC,KAAM,GAENC,kBAAmB,GACnBC,iBAAkB,GAElBC,iBAAkB,GAClBC,kBAAmB,GACnBC,kBAAmB,GACnBC,aAAc,GACdC,eAAgB,MArCbC,EAhBkC,KAgBxBC,EAhBwB,KAwGzC,OA/CAC,qBAAU,WACR,IAAIC,EAEEC,EAAS,SAACC,GAEd,IAAIb,EAAOa,EAEX,OAAKA,GAEDA,EAAMC,SAAS,OACjBd,EAAOa,EAAME,QAAQ,KAAM,MAE7Bf,EAAOA,EAAKgB,eALOhB,GAWfiB,EAAKC,IAAUC,MACnB,SAACC,GAAD,OAAaR,EAAO1C,KAAiB0C,EAAOQ,EAAQpB,cAG5B,IAAf/B,IAKT0C,EAAQU,EAAUC,SAASH,MACzB,SAAC5B,GAAD,OAAYqB,EAAO3C,KAAgB2C,EAAOrB,EAAOS,SAGnDQ,EAAS5B,UAAY+B,GAAS,IAAIY,IAKhCN,GAAMA,EAAGM,IAGTd,OADmB,IAAVE,EACA,CAAE9B,UAAWoC,EAAGM,IAEhB,CAAE1C,UAAWoC,EAAGM,GAAI3C,SAAU+B,EAAMY,KAGjDlD,GAAY,KACX,IAGD,kBAAC,IAAD,CAAamD,KAAMC,GACjB,kBAAC,IAAD,CAAQC,QAAM,GACZ,kBAAC,IAAD,CACElB,SAAUA,EACVC,SAAUA,EACVkB,UAAU,wCACVvD,SAAUA","file":"component---src-templates-form-template-js-7657b3292da75425c13d.js","sourcesContent":["import { AppProvider } from '@shopify/polaris';\nimport enTranslations from '@shopify/polaris/locales/en.json';\n\n// import { initial } from 'lodash';\nimport React, { useEffect, useState } from 'react';\n\n// import unslug from 'unslug';\n\nimport Checkout from '../components/Home/Checkout/index';\n\n// import GetStartedForm from '../src/components/Home/GetStartedForm';\nimport Layout from '../components/Layout';\n\nimport useFormData from '../hooks/useFormData';\nimport { charities } from '../import/charities.json';\nimport locations from '../import/locations.json';\n\n// import useDialog from '~/components/Dialog/useDialog';\n\nexport default function FormpageTemplate() {\n  let countyName;\n  let charityName;\n  let allPath;\n\n  const [readOnly, setReadOnly] = useState(false);\n\n  if (typeof window !== 'undefined') {\n    let path = window.location.href.split('/');\n\n    [, , , path] = path;\n    allPath = path.split('#');\n    [charityName, countyName] = allPath;\n  }\n  // setSelected({ selected: true });\n  // charity\n  const [formData, onChange] = useFormData({\n    countyId: null,\n    charityId: null,\n    checkoutItems: [],\n    delivery: {\n      subscription: 'week',\n      firstname: '',\n      lastname: '',\n      // fullname: '',\n      postcode: '',\n      address_1: '',\n      address_2: '',\n      town: '',\n      county: '',\n      is_used_same_address_for_billing: true,\n    },\n    // contact: {\n    //   phone: null,\n    //   email: null\n    // },\n    payment: {\n      phone: '',\n      email: '',\n      isEmailedMe: false,\n\n      card_number: '',\n      expiry_at: '',\n      cvv: '',\n      name: '',\n\n      billing_firstname: '',\n      billing_lastname: '',\n      // billing_fullname: '',\n      billing_postcode: '',\n      billing_address_1: '',\n      billing_address_2: '',\n      billing_town: '',\n      billing_county: '',\n    },\n  });\n\n  useEffect(() => {\n    let count;\n\n    const change = (value) => {\n      // eslint-disable-next-line no-param-reassign\n      let name = value;\n\n      if (!value) return name;\n\n      if (value.includes('-')) {\n        name = value.replace(/-/g, ' ');\n      }\n      name = name.toLowerCase();\n\n      // console.log(`name: ${name}`);\n      return name;\n    };\n\n    const ch = charities.find(\n      (charity) => change(charityName) === change(charity.name),\n    );\n    // county\n    if (typeof countyName !== 'undefined') {\n      // if (countyName.includes('-')) {\n      //   countyName = countyName.replace(/-/g, ' ').toLowerCase();\n      // }\n\n      count = locations.counties.find(\n        (county) => change(countyName) === change(county.name),\n      );\n\n      formData.countyId = (count || {}).id;\n    }\n\n    // formData.charityId = (ch || {}).id;\n\n    if (ch && ch.id) {\n      // console.log('=====>', ch);\n      if (typeof count === 'undefined') {\n        onChange({ charityId: ch.id });\n      } else {\n        onChange({ charityId: ch.id, countyId: count.id });\n      }\n    }\n    setReadOnly(true);\n  }, []);\n\n  return (\n    <AppProvider i18n={enTranslations}>\n      <Layout isHide>\n        <Checkout\n          formData={formData}\n          onChange={onChange}\n          className=\"template bg-white pt-8 shadow-lg my-8\"\n          readOnly={readOnly}\n        />\n      </Layout>\n    </AppProvider>\n  );\n}\n"],"sourceRoot":""}